<Documentation>
  <Docs DocId="M:ObjCRuntime.Dlfcn.dlsym(System.IntPtr,System.String)">
        <param name="handle">Handle to the dynamic library previously opened with <see cref="M:ObjCRuntime.Dlfcn.dlopen(System.String,System.Int32)" />.</param>
        <param name="symbol">Name of the public symbol in the dynamic library to look up.</param>
        <summary>Returns the address of the specified symbol in the dynamic library.</summary>
        <returns>
	  Returns <see langword="null" /> if the symbol was not found.   The error condition can be probed using the <see cref="M:ObjCRuntime.Dlfcn.dlerror" />.
        </returns>
        <remarks>
          <para>
	    Returns the address of the specified symbol in the dynamic library.
	  </para>
          <para>
	    Which libraries and bundles are searched depends on the handle parameter.
	  </para>
          <para>
	    The symbol name passed to dlsym() is the name used in C
	    source code.  For example to find the address of function
	    foo(), you would pass "foo" as the symbol name.  This is
	    unlike the older dyld APIs which required a leading
	    underscore.  If you looking up a C++ symbol, you need to
	    use the mangled C++ symbol name.
	  </para>
        </remarks>
      </Docs>
</Documentation>