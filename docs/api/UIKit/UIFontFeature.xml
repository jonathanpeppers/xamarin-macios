<Documentation>
  <Docs DocId="M:UIKit.UIFontFeature.#ctor(CoreText.CTFontFeatureCharacterAlternatives.Selector)">
        <param name="featureSelector">The value for this setting.</param>
        <summary>Creates a new UIFontFeature that describes a CoreText CTFontFeatureCharacterAlternatives with the given value.</summary>
        <remarks>
          <para>
	    This creates a new instance of the UIFontFeature with the CoreText's CTFontFeatureCharacterAlternatives type using the <paramref name="featureSelector" /> as its parameter.
	  </para>
          <para>
	    Character alternatives are font specific, and the only
	    strongly typed value is the NoAlternatives value.  Any other
	    integer above 0 is used to specify the specific character
	    alternative that you want to use.
	  </para>
          <para>
	    It is simpler to use the UIFontFeature constructor that just takes an integer:
	  </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
UIFont CustomizeFont (UIFont font)
{
    var originalDescriptor = font.FontDescriptor;
    var attributes = new UIFontAttributes (
    	new UIFontFeature (CTFontFeatureNumberSpacing.Selector.ProportionalNumbers)); 
    var newDesc = originalDescriptor.CreateWithAttributes (attributes);
    return UIFont.FromDescriptor (newDesc, 80);
}
]]></code>
          </example>
        </remarks>
      </Docs>
</Documentation>